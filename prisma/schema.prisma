// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
//   output   = "../src/generated/prisma"
// }

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  name         String?
  password     String

  // Relations
  posts        Post[]    @relation("UserPosts")
  comments     Comment[] @relation("UserComments")

  // Forgot Password
  resetToken   String?   @db.VarChar(255)
  resetExpires DateTime?

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  content     String

  authorId    Int
  author      User      @relation("UserPosts", fields: [authorId], references: [id])

  tags        Json?     // âœ… MySQL-compatible for array
  published   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  comments    Comment[]
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String

  postId      Int
  post        Post      @relation(fields: [postId], references: [id])

  authorId    Int
  author      User      @relation("UserComments", fields: [authorId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model BlacklistedToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}